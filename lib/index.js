// Generated by CoffeeScript 1.10.0
(function() {
  var OleTestToolDriver, browser, tc, testtoolfactory;

  browser = require('./browser.js');

  tc = require('./tcdriver.js');

  testtoolfactory = require('./testtoolfactory.js');

  OleTestToolDriver = function() {
    var TestToolFactory, call, close, launch, self;
    TestToolFactory = new testtoolfactory;
    self = {
      launch: launch = function(cb) {
        var args;
        args = {};
        process.argv.forEach(function(val, index, array) {
          var matches, re;
          re = /(\w*)=(\w*)/;
          matches = re.exec(val);
          if (matches != null) {
            matches.forEach(function(item, index, matches) {
              if (index % 2 !== 0) {
                args[item] = matches[index + 1];
              }
            });
          }
        });
        if (args.envName == null) {
          args.envName = process.env.envName;
          if (args.envName == null) {
            throw new TypeError('Invalid environment parameter or value. Fix: set envName=DEV');
          }
        }
        if (args.testBrowser == null) {
          args.testBrowser = process.env.testBrowser;
          if (args.testBrowser == null) {
            throw new TypeError('Invalid environment parameter or value. Fix: set testBrowser=chrome');
          }
        }
        browser.launchme(args.envName, args.testBrowser, function(proc) {
          var browserinstance;
          browserinstance = proc;
          debugger;
          cb(browserinstance);
        });
      },
      call: call = function(paramObj, cb) {
        var testToolObj;
        testToolObj = TestToolFactory.createObject(paramObj);
        testToolObj.on('testResult', function() {
          testToolObj.testresult(cb);
        });
      },
      close: close = function(browser) {
        debugger;
        browser.stop();
      }
    };
    return self;
  };

  module.exports = OleTestToolDriver;

}).call(this);
